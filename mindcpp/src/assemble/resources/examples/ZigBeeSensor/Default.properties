# MindEd-generated file for the 'Default' CDT build configuration
# Please note its generated from IDE (Mind path), with reserved one-way modifications
# concerning sourcePath, includePath, targetComponent and binaryName,
# and NEVER synchronized back from file.
# All other variables are free for you for modification.

# Directories that the mind compiler will inspect when searching
# for source components. Path list separated by ':', file separator '/'.
# Paths must be relative to the project base folder.
# Note: 'runtime' is a built-in value and doesn't need to be mentioned.
sourcePath =src/main/mind:src/test/mind:C:UsersSESA188919DocumentsGitHubStephanemind-compilermindc\targetmindc-2.1-SNAPSHOT-binmindc-2.1-SNAPSHOT\runtime;./libs
# Directories that the mind compiler will inspect when searching
# for test components.
# Test Suites are components annotated with @TestSuite providing @Test interfaces.
testSourcePath = src/test/mind
# Output directory location.
outputDirectory = target
# Optional: Extra include directories for C compiler inspection.
# Should be mainly be used for legacy/external library dependencies.
# Note: 'sourcePath' entries are already automatically registered for header inclusion.
includePath =

# Qualified name of the root component to compile.
targetComponent =zigBeeSensor
# File name of produced binary (executable/shared library).
# Will be located under: ${outputDirectory}/${configuration}/
# where ${configuration} is the current file base name
# and ${outputDirectory} is specified above.
binaryName =zigBeeSensor

# Optional assembler, compiler and linker commands to be used by Mindc. Default values = GCC.
compilerCommand = g++
linkerCommand = g++
assemblerCommand = as

# Assembler-specific flags
asFlags =
# Preprocessor-specific flags
cppFlags = -I./libs
# C compiler-specific flags
cFlags = -I.
# Linker-specific flags
ldFlags = -L./libs -lFlashMngExt

# Extra option could be -B, -K, -F, -O, --ext-files=, --iar, --ccs ...
# Have a look at "mindc --help" output for available options
extraOptions = "--cpp --keep --flatten"

# Extra option could be --cunit-mode=<automated/console/gcov> (automated is default)
# or any other flag of your choice.
testExtraOptions =
